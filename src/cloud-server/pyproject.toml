[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "archbuilder-ai-server"
version = "0.1.0"
description = "ArchBuilder.AI Cloud Server - AI-powered architectural design automation platform"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "ArchBuilder.AI Team", email = "team@archbuilder.ai"}
]
keywords = [
    "architecture",
    "ai",
    "bim",
    "revit",
    "cad",
    "building-design",
    "automation",
    "fastapi"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Topic :: Scientific/Engineering :: Architecture",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Framework :: FastAPI"
]
requires-python = ">=3.13"
dependencies = [
    # Core FastAPI Framework
    "fastapi[standard]>=0.115.4",
    "uvicorn[standard]>=0.32.0",
    "pydantic>=2.9.2",
    "pydantic-settings>=2.6.0",
    "python-multipart>=0.0.12",
    
    # Database
    "sqlalchemy>=2.0.36",
    "asyncpg>=0.30.0",
    "alembic>=1.13.3",
    "aiosqlite>=0.20.0",
    
    # Authentication and Security
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "cryptography>=43.0.1",
    
    # Caching and Message Queue
    "redis>=5.1.1",
    "celery>=5.4.0",
    
    # AI Model Integration
    "openai>=1.54.4",
    "anthropic>=0.39.0",
    "google-cloud-aiplatform>=1.71.1",
    "vertexai>=1.71.1",
    "google-auth>=2.36.0",
    
    # Vector Database and Embeddings
    "langchain>=0.3.7",
    "langchain-community>=0.3.5",
    "sentence-transformers>=3.1.1",
    "chromadb>=0.5.20",
    "faiss-cpu>=1.9.0",
    
    # Document Processing
    "PyPDF2>=3.0.1",
    "ezdxf>=1.3.3",
    "ifcopenshell>=0.8.0",
    "python-docx>=1.1.2",
    "openpyxl>=3.1.5",
    
    # Monitoring and Logging
    "structlog>=24.4.0",
    "prometheus-client>=0.21.0",
    
    # Data Processing
    "numpy>=2.1.3",
    "pandas>=2.2.3",
    "Pillow>=10.4.0",
    
    # Utilities
    "aiofiles>=24.1.0",
    "httpx>=0.27.2",
    "python-dotenv>=1.0.1",
    "jinja2>=3.1.4"
]

[project.optional-dependencies]
# Development dependencies
dev = [
    "pytest>=8.3.3",
    "pytest-asyncio>=0.24.0",
    "pytest-mock>=3.14.0",
    "pytest-cov>=6.0.0",
    "black>=24.10.0",
    "isort>=5.13.2",
    "mypy>=1.11.2",
    "ruff>=0.7.1",
    "pre-commit>=3.8.0"
]

# Production dependencies
prod = [
    "gunicorn>=21.2.0",
    "hypercorn>=0.17.3",
    "sentry-sdk[fastapi]>=2.18.0",
    "prometheus-fastapi-instrumentator>=7.0.0"
]

# Advanced document processing
document-processing = [
    "pytesseract>=0.3.13",
    "opencv-python>=4.10.0.84",
    "pdfplumber>=0.11.4"
]

# Machine Learning extras
ml = [
    "scikit-learn>=1.5.2",
    "scipy>=1.14.1",
    "spacy>=3.8.2",
    "nltk>=3.9.1"
]

# All optional dependencies
all = [
    "archbuilder-ai-server[dev,prod,document-processing,ml]"
]

[project.urls]
Homepage = "https://archbuilder.ai"
Repository = "https://github.com/archbuilder-ai/archbuilder.ai"
"Bug Tracker" = "https://github.com/archbuilder-ai/archbuilder.ai/issues"

[project.scripts]
archbuilder-server = "app.main:main"

# ===== Code Quality Tools Configuration =====

[tool.black]
line-length = 100
target-version = ['py313']
include = '\.pyi?$'
extend-exclude = '''
/(
    # directories
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | migrations
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_gitignore = true
known_first_party = ["app", "tests"]
known_third_party = [
    "fastapi",
    "pydantic",
    "sqlalchemy",
    "openai",
    "anthropic",
    "google",
    "langchain",
    "numpy",
    "pandas"
]

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "ezdxf.*",
    "ifcopenshell.*",
    "pytesseract.*",
    "cv2.*",
    "chromadb.*",
    "faiss.*",
    "sentence_transformers.*"
]
ignore_missing_imports = true

[tool.ruff]
target-version = "py313"
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "N",  # pep8-naming
    "S",  # bandit
    "T20", # flake8-print
    "SIM", # flake8-simplify
    "ARG", # flake8-unused-arguments
]
ignore = [
    "S101", # Use of assert detected
    "S104", # Possible binding to all interfaces
    "S108", # Probable insecure usage of temp file/directory
    "B008", # Do not perform function calls in argument defaults
    "N806", # Variable in function should be lowercase
    "UP007", # Use X | Y for type annotations
]

[tool.ruff.per-file-ignores]
"tests/**/*.py" = ["S101", "ARG001", "ARG002"]
"app/core/config.py" = ["S105", "S106"]
"migrations/**/*.py" = ["F401"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-fail-under=80"
]
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "ai: marks tests that require AI model access",
    "database: marks tests that require database access"
]
asyncio_mode = "auto"